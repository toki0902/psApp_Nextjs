openapi: 3.0.0

info:
  title: ps-app API
  version: "1.0.0"

servers:
  - url: https://localhost:3000/api/v1

components:
  schemas:
    Video:
      type: object
      properties:
        url:
          type: string
        uploadAt:
          type: string
        views:
          type: integer
        thumbnail:
          type: string
        title:
          type: string
    Playlist:
      type: object
      properties:
        playlistTitle:
          type: string
        videos:
          type: array
          items:
            $ref: "#/components/schemas/Video"
        playlistId:
          type: string
        createdAt:
          type: string

paths:
  /search:
    get:
      summary: Get video list from keyword user entered
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: success response containing search results array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Video"

  /users/{userId}/playlists:
    get:
      summary: Get playlist from userId
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: success response containing playlist
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Playlist"
    post:
      summary: Create new playlist
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                playlistTitle:
                  type: string
      responses:
        201:
          description: success response containing info of new playlist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Playlist"

  /users/{userId}/playlists/{playlistId}/videos:
    post:
      summary: Add new video to an already existing playlist
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: playlistId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                videoUrl:
                  type: string
      responses:
        201:
          description: success response containing a message that the new video has been added
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  # TODO nextAuthはリダイレクト必須。よってリダイレクト先で認証が成功した時にJWTが生成される前提として、Oauthリダイレクト、JWT生成、それをクライアントに保存するまでをアプリケーション層では実装したい。
  # なので、ドメイン層ではOauthリダイレクト,JWTを生成するインターフェースなどを抽象実装し、インフラストラクチャ層で具現化する。

  /sessions/{provider}:
    post:
      summary: success response containing a message that the new sessions has been created
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: Successful login
          headers:
            Set-Cookie:
              description: set JWT to cookie
              schema:
                type: string
                example: token=<JWT>; HttpOnly; Secure; Path=/; SameSite=Strict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: created new sessions!
